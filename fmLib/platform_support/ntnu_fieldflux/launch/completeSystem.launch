<!--
This launch file runs the pose 2d estimator with simulated sensor output based
on a rosbag recorded during a drive test of the Armadillo Pichi robot.
-->

<launch>
	<!-- Armadillo IV parameters --> 
	<param name="robot_max_velocity" value="2.0"/>
	

<!--	<param name="/use_sim_time" value="true"/> -->

	<group ns="transforms">
		<node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0 0 0 0 base_footprint base_link 100"/>
	</group>


	  <node pkg="microstrain_3dmgx2_imu" type="imu_node" name="microstrain_3dmgx2_node" output="screen">
	    <param name="time_offset" value="-0.040" />
	    <param name="port"  type="string" value="/dev/ttyACM0" />
	    <param name="autostart" type="bool" value="true" />
      	    <param name="frameid"  type="string" value="imu" />
	    <param name="autocalibrate" type="bool" value="false" />
	    <param name="angular_velocity_stdev" type="double" value="0.00017"/>
	    <param name="max_drift_rate" type="double" value="1.0"/>
	  </node>
  
	  <node pkg="ntnu_fieldflux" type="CANMsgHandler" name="CAN"/>
	  <node pkg="ntnu_fieldflux" type="elevator_controller.py" name="elevator">
		<param name="odom_topic" type="string" value="/fmKnowledge/encoder_odom"/>
	  </node>
	  <node pkg="ntnu_fieldflux" type="potentialFieldController" name="navigation_controller" output="screen">
		<param name="wheel_odom_topic" type="string" value="/fmKnowledge/encoder_odom"/>
		<param name="subscribe_odom" type="string" value="/fmKnowledge/pose"/>		
	  </node>

	  <node pkg ="ntnu_fieldflux" type="waypoint_holder_node.py" name="waypoint_holder" output="screen" cwd="node"/>

	  <node pkg="joy" type="joy_node" name="joy_input">
		<param name="dev" type="string" value="/dev/input/js0"/>
		<param name="deadzone" value="0.10"/>
  	  </node>
	<group ns="fmSensors">
		<!-- launch conversion node to convert IntStamped messages to encoder messages -->
		<!-- (this is a temporary fix until we get all encoder messages changed to IntStamped) -->
	<!--	<node pkg="int_stamped_to_encoder" name="enc_conversion" type="encoder_converter.py" /> -->
	  <node pkg="serial_string" name="serial_string_node" type="serial_string_node" output="screen" respawn="true">
		<param name="publisher_topic" value="/fmData/gps_rx" />	 
		<param name="subscriber_topic" value="/fmData/tx" />	
		<param name="device" value="/dev/ttyUSB0" />	
		<param name="baudrate" value="115200" />
		<param name="termination_character" value="10"/>
	  </node>
		<!-- extract data from $GPGGA NMEA messages transmitted by the GPS -->
		<node pkg="gps_gpgga" name="nmea_to_gpgga" type="gps_gpgga_node" output="screen">
		    <param name="subscribe_topic_id" value="/fmData/gps_rx" />
			<param name="publish_topic_id" value="/fmInformation/gpgga" />
		</node>

		<!-- append Transverse Mercator projection coordinates to NMEA $GPGGA message -->
		<node pkg="gpgga_to_tranmerc" name="gpgga_to_tranmerc" type="gpgga_to_tranmerc_node" output="screen">
			<param name="gpgga_sub" value="/fmInformation/gpgga" />
			<param name="gpgga_tranmerc_pub" value="/fmInformation/gpgga_tranmerc" />
			<param name="transverse_mercator_a" value="6378137.0" />
			<param name="transverse_mercator_f" value="0.0033528106647474805" /> 
			<param name="transverse_mercator_false_easting" value="500000.0" />
			<param name="transverse_mercator_scale_factor" value="0.9996" />
			<param name="transverse_mercator_origin_latitude" value="0.0" />
			<param name="transverse_mercator_central_meridian" value="9.0" />
			<param name="transverse_mercator_false_northing" value="0.0" />
		</node>
	</group>

	<group ns="fmProcessors">
		<!-- estimate robot 2d pose -->
		<node pkg="pose_2d_estimator" name="pose_estimator" type="pose_2d_estimator_node.py" output="screen" >
			<param name="odom_sub" value="/fmKnowledge/encoder_odom" />
			<param name="imu_sub" value="/imu/data" />
			<param name="gga_sub" value="/fmInformation/gpgga_tranmerc" />
			<param name="pose_pub" value="/fmKnowledge/pose" />
			<param name="ekf_initial_guess_easting" value="599328.77" /> <!-- [m] if unsure set to 0.0 -->
			<param name="ekf_initial_guess_northing" value="6615250.07" /> <!-- [m] if unsure set to 0.0 -->
			<param name="ekf_initial_guess_yaw" value="0.0" /> <!-- [rad] if unsure set to 0.0 -->
			<param name="odometry_distance_variance" value="0.0001" /> <!-- [m/update] -->
			<param name="odometry_angular_variance" value="0.35" /> <!-- [rad/update] -->
			<param name="imu_variance" value="0.000035" /> <!-- [rad/update] -->
			<param name="imu_north_correction" value="0.038" />
		</node>

		<!-- plot maps of pose, gnss and odometry data -->
		<node pkg="pose_2d_estimator" name="robot_track_map" type="robot_track_map_node.py" output="screen" >
			<param name="pose_sub" value="/fmController/pos_used" />
			<param name="gnss_sub" value="/fmInformation/gpgga_tranmerc" />
			<param name="odom_sub" value="/fmKnowledge/encoder_odom" />
			<param name="imu_sub" value="/imu/data" />
			<param name="plot_pose_track" value="true" /> <!-- remember to use proper values for ekf_initial_guess_ at pose_2d_estimator for this plot -->
			<param name="plot_gnss_track" value="true" />
			<param name="plot_odometry_track" value="true" />
			<param name="plot_pose_yaw" value="true" />
			<param name="easting_offset" value="-599319.0" />
			<param name="northing_offset" value="-6615238.0" />
			<param name="trackpoint_threshold" value="0.1" /> <!-- [m] -->
			<param name="map_update_frequency" value="2.0" /> <!-- [Hz] -->
			<param name="map_title" value="Robot track" />
			<param name="map_window_size" value="7.0" /> <!-- [inches] -->
		</node>

		<!-- calculate odometry based on encoders and IMU yaw axis orientation -->
		<node pkg="differential_odometry" name="differential_odometry" type="differential_odometry_node" output="screen" >
			<param name="enc_left_sub" value="/fmInformation/encoder_left" />
			<param name="enc_right_sub" value="/fmInformation/encoder_right" />
			<param name="imu_sub" value="/imu/data" />
			<param name="odom_pub" value="/fmKnowledge/encoder_odom" />
			<param name="encoder_output" value="relative"></param>  
		    <!--<param name="yaw_angle_source" value="imu_orientation"></param> -->
			<param name="yaw_angle_source" value="XXimu_angular_velocity"></param>
			<param name="imu_angular_velocity_yaw_axis" value="z"></param>
			<param name="diff_steer_wheel_radius" value="0.3545"/>
			<!-- param name="diff_steer_wheel_ticks_per_rev" value="1562"/> -->
			<param name="diff_steer_wheel_ticks_per_rev" value="83333"/>
			<param name="diff_steer_wheel_distance" value="1.88"/>
			<param name="vehicle_frame" value="base_footprint"></param>      
			<param name="odom_estimate_frame" value="/odom_combined"></param>      
		</node>
	</group>
</launch>
